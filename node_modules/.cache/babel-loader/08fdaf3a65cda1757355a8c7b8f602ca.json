{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading: customFetchLoading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const [loading, setLoading] = useState(false); // Separate loading state for usePaginatedTransactions\n\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      return {\n        data: response.data,\n        nextPage: response.nextPage\n      };\n    });\n    setLoading(false);\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading: loading || customFetchLoading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"BZqy9DAp35qC/JbU4RYFVIV8UQQ=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","customFetchLoading","paginatedTransactions","setPaginatedTransactions","setLoading","fetchAll","response","page","nextPage","previousResponse","data","invalidateData"],"sources":["/Users/DJ 1/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\";\nimport { PaginatedTransactionsResult } from \"./types\";\nimport { useCustomFetch } from \"./useCustomFetch\";\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading: customFetchLoading } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<Transaction[]> | null>(null);\n  const [loading, setLoading] = useState(false); // Separate loading state for usePaginatedTransactions\n\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    );\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      return { data: response.data, nextPage: response.nextPage };\n    });\n\n    setLoading(false);\n  }, [fetchWithCache, paginatedTransactions]);\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n\n  return { data: paginatedTransactions, loading: loading || customFetchLoading, fetchAll, invalidateData };\n}"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC,OAAO,EAAEC;EAA3B,IAAkDJ,cAAc,EAAtE;EACA,MAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDP,QAAQ,CAA0C,IAA1C,CAAlE;EACA,MAAM,CAACI,OAAD,EAAUI,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAHsE,CAGvB;;EAE/C,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvCS,UAAU,CAAC,IAAD,CAAV;IACA,MAAME,QAAQ,GAAG,MAAMP,cAAc,CACnC,uBADmC,EAEnC;MACEQ,IAAI,EAAEL,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACM;IADnE,CAFmC,CAArC;IAOAL,wBAAwB,CAAEM,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOH,QAAP;MACD;;MAED,OAAO;QAAEI,IAAI,EAAEJ,QAAQ,CAACI,IAAjB;QAAuBF,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CANuB,CAAxB;IAQAJ,UAAU,CAAC,KAAD,CAAV;EACD,CAlB2B,EAkBzB,CAACL,cAAD,EAAiBG,qBAAjB,CAlByB,CAA5B;EAoBA,MAAMS,cAAc,GAAGhB,WAAW,CAAC,MAAM;IACvCQ,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEO,IAAI,EAAER,qBAAR;IAA+BF,OAAO,EAAEA,OAAO,IAAIC,kBAAnD;IAAuEI,QAAvE;IAAiFM;EAAjF,CAAP;AACD;;GA9Beb,wB;UAC0CD,c"},"metadata":{},"sourceType":"module"}